---
import Layout from '../layouts/Layout.astro';

// Fetch records from the API
const API_BASE = 'http://localhost:3000';
let records = [];
let error = null;

try {
  const response = await fetch(`${API_BASE}/api/records`);
  if (response.ok) {
    const data = await response.json();
    records = data.data?.records || [];
  } else {
    error = `Failed to fetch records: ${response.status}`;
  }
} catch (err) {
  error = `Error connecting to API: ${err.message}`;
}
---

<Layout title="CivicPress - Browse Records">
  <div class="space-y-6">
    <div class="text-center">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Civic Records</h1>
      <p class="text-lg text-gray-600 max-w-2xl mx-auto">
        Browse and search civic documents, bylaws, policies, and more from your local government.
      </p>
    </div>

    {error ? (
      <div class="bg-red-50 border border-red-200 rounded-md p-4">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">API Connection Error</h3>
            <div class="mt-2 text-sm text-red-700">
              <p>{error}</p>
              <p class="mt-2">Make sure the CivicPress API is running on port 3000.</p>
            </div>
          </div>
        </div>
      </div>
    ) : (
      <div class="space-y-6">
        <!-- Search Bar -->
        <div class="max-w-md mx-auto">
          <div class="relative">
            <input
              type="text"
              placeholder="Search records..."
              class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-civic-500 focus:border-civic-500"
              id="searchInput"
            />
            <div class="absolute inset-y-0 right-0 pr-3 flex items-center">
              <svg class="h-5 w-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
              </svg>
            </div>
          </div>
        </div>

        <!-- Records Grid -->
        {records.length > 0 ? (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {records.map((record) => (
              <div class="bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200">
                <div class="p-6">
                  <div class="flex items-center justify-between mb-2">
                    <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      record.type === 'bylaw' ? 'bg-blue-100 text-blue-800' :
                      record.type === 'policy' ? 'bg-green-100 text-green-800' :
                      record.type === 'resolution' ? 'bg-purple-100 text-purple-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {record.type}
                    </span>
                    <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${
                      record.status === 'approved' ? 'bg-green-100 text-green-800' :
                      record.status === 'draft' ? 'bg-yellow-100 text-yellow-800' :
                      record.status === 'proposed' ? 'bg-orange-100 text-orange-800' :
                      'bg-gray-100 text-gray-800'
                    }`}>
                      {record.status}
                    </span>
                  </div>
                  <h3 class="text-lg font-semibold text-gray-900 mb-2">{record.title}</h3>
                  {record.description && (
                    <p class="text-gray-600 text-sm mb-4 line-clamp-3">{record.description}</p>
                  )}
                  <div class="flex items-center justify-between text-sm text-gray-500">
                    <span>{record.created_at ? new Date(record.created_at).toLocaleDateString() : 'Unknown date'}</span>
                    <a href={`/record/${record.id}`} class="text-civic-600 hover:text-civic-700 font-medium">
                      View â†’
                    </a>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div class="text-center py-12">
            <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
            <h3 class="mt-2 text-sm font-medium text-gray-900">No records found</h3>
            <p class="mt-1 text-sm text-gray-500">Get started by creating some civic records.</p>
          </div>
        )}
      </div>
    )}
  </div>
</Layout>

<script>
  // Simple search functionality
  const searchInput = document.getElementById('searchInput');
  const recordCards = document.querySelectorAll('[data-record]');
  
  searchInput?.addEventListener('input', (e) => {
    const query = e.target.value.toLowerCase();
    
    recordCards.forEach(card => {
      const title = card.querySelector('h3')?.textContent?.toLowerCase() || '';
      const description = card.querySelector('p')?.textContent?.toLowerCase() || '';
      const type = card.querySelector('span')?.textContent?.toLowerCase() || '';
      
      if (title.includes(query) || description.includes(query) || type.includes(query)) {
        card.style.display = 'block';
      } else {
        card.style.display = 'none';
      }
    });
  });
</script>
